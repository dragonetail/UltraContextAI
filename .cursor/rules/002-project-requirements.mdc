---
description: Use this as a mandatory context protocol that you always read and based
globs: 
alwaysApply: false
---
# 项目需求执行

> 版本：1.0.0

## 上下文 🎯
- 确保一致的项目实施
- 保持与项目目标的一致性
- 强制适当的文档记录
- 验证技术决策
- 支持对初学者友好的开发方法

## 要求 📋

### 文档结构
```markdown
# 项目名称
## 概述
- 项目描述
- 核心目标
- 目标受众
- 业务目的

## 技术愿景
- 架构概述
- 关键技术
- 开发方法
```

### 需求类别

#### 技术栈
- 前端框架
- 后端服务
- 数据库解决方案
- API集成

#### UI/UX需求
- 设计系统
- 响应式断点
- 可访问性标准
- 用户交互

#### 功能性
- 核心功能
- 用户流程
- 业务逻辑
- 集成点

#### 性能
- 加载时间目标
- 优化目标
- 资源限制
- 缓存策略

#### 安全性
- 认证
- 授权
- 数据保护
- API安全

#### SEO和分析
- 元数据要求
- 跟踪需求
- 性能指标
- 搜索优化

### 实施过程

#### 验证步骤
- 检查项目信息完整性
- 验证技术要求
- 评审设计要求
- 确认功能范围
- 评估安全需求

#### 警告系统
```markdown
⚠️ 警告：[类别]
- 缺失：[缺失项目列表]
- 影响：[潜在问题]
- 行动：[所需步骤]
```

#### 路线图管理
- 仅在完成需求后创建
- 分解为阶段
- 定义明确的里程碑
- 列出系统方法
- 逻辑排序实施

### 对初学者友好的考虑

#### 技术选择
- 首选熟悉的技术
- 选择文档完善的解决方案
- 考虑学习曲线
- 启用AI工具支持

#### 实施指导
- 提供清晰的示例
- 包含入门模板
- 记录常见模式
- 参考类似项目

## 示例 💡

### ✅ 良好的项目需求
```markdown
# 婚礼回忆博客

## 项目信息 ✅
- 具有实时功能的数字婚礼留言簿
- 照片库和记忆共享
- 互动宾客参与
- 移动优先设计

## 要求 ✅
- 技术栈：Next.js、Supabase、TailwindCSS
- 功能：实时聊天、照片上传
- 安全性：宾客认证
- 性能：< 3秒加载时间

## 路线图 ✅
1. 阶段1：基本设置和认证
2. 阶段2：照片库实施
3. 阶段3：实时留言簿
4. 阶段4：移动优化
```

### ❌ 无效的项目需求
```markdown
# 新项目

## 技术栈
- 使用现代技术
- 添加数据库
- 使其速度快

[缺少项目信息 ❌]
[需求不完整 ❌]
[没有明确的路线图 ❌]
```

## ⚠️ 关键规则
- 始终验证项目信息的完整性
- 切勿在没有完整需求的情况下创建路线图
- 维护清晰的文档结构
- 确保对初学者友好的方法
- 使用警告系统标识缺失项
- 根据用户的经验水平进行验证
- 专注于实际实施
- 参考熟悉的技术
- 记录所有决策和原因
